##############################################################################
# Copyright (c) 2017 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
heat_template_version: 2015-04-30

description: >
  Sample template with two VMs instantiated against different images and
  flavors on the same network and the first one has a floating IP

parameters:
  net_name:
    type: string
    label: Test network name
    description: The name of the stack's network
    default: test_net
  subnet_name:
    type: string
    label: Test subnet name
    description: The name of the stack's subnet
    default: test_subnet
  router_name:
    type: string
    label: Test router name
    description: The name of the stack's router
    default: mgmt_router
  external_net_name:
    type: string
    description: Name of the external network which management network will connect to
    default: external

resources:
  network:
    type: OS::Neutron::Net
    properties:
      name: { get_param: net_name }

  subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { get_param: subnet_name }
      ip_version: 4
      cidr: 10.1.2.0/24
      network: { get_resource: network }

  management_router:
    type: OS::Neutron::Router
    properties:
      name: { get_param: router_name }
      external_gateway_info:
        network: { get_param: external_net_name }

  management_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: management_router }
      subnet: { get_resource: subnet }
